#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

test "" = "$(grep '^Signed-off-by: ' "$1" |
	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
	echo >&2 Duplicate Signed-off-by lines.
	exit 1
}
msg=$(cat $1)
red='\033[0;31m'
nc='\033[0m'
if [[ ${msg:0:1} =~ [[:lower:]] ]]; then
    echo -e "${red}Sorry, commit failed. First letter must be in uppercase!${nc}"
    exit 1
fi;

# Check non-ascii
# \t existed in .git/COMMIT_EDITMSG when git commit --amend
\grep '[^ -~[:space:]]\+' $1 &>/dev/null
if [[ $? -eq 0 ]]; then
    echo -e "${red}Sorry, commit failed. No Chinese plz!${nc}"
    exit 1
fi;

# Must reference an issue
if ! grep -i '\(Merge\|Hotfix\|#[[:digit:]]\+\)' $1 &>/dev/null; then
    echo -e "${red}Sorry, commit failed. Reference an issue plz!${nc}"
    exit 2
fi
